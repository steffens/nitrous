{"version":3,"sources":["meteor-developer/meteor_developer_common.js","meteor-developer/meteor_developer_configure.html","meteor-developer/meteor_developer_configure.js","meteor-developer/meteor_developer_client.js"],"names":[],"mappings":";;;;;;;;AAAA,6B;;AAEA,2D;;AAEA,e;AACA,mE;AACA,sD;AACA,wC;AACA,sE;AACA,G;AACA,E;;;;;;;;;;;;;;;;;;;;ACTA,sE;AACA,gJ;AACA,kB;AACA,oe;AACA,kB;AACA,4D;AACA,sD;AACA,kG;AACA,I;;;;;;;;;;;;;;;;;;;ACTA,gE;AACA,wB;AACA,gC;AACA,G;AACA,G;;AAEA,6E;AACA,U;AACA,4C;AACA,6C;AACA,I;AACA,E;;;;;;;;;;;;;;;;;;;ACXA,4D;AACA,mF;AACA,4E;AACA,W;AACA,+E;AACA,uC;AACA,6E;AACA,gD;AACA,mB;AACA,G;;AAEA,4D;AACA,+B;AACA,K;AACA,gB;AACA,wC;AACA,gF;AACA,W;AACA,G;;AAEA,wC;;AAEA,0E;;AAEA,gB;AACA,yC;AACA,8B;AACA,mE;AACA,gC;AACA,uC;;AAEA,mC;AACA,uE;;AAEA,gF;;AAEA,qB;AACA,qC;AACA,2B;AACA,uB;AACA,yE;AACA,qC;AACA,2C;AACA,K;AACA,E;;AAEA,8D","file":"/packages/meteor-developer.js","sourcesContent":["MeteorDeveloperAccounts = {};\n\nMeteorDeveloperAccounts._server = \"https://www.meteor.com\";\n\n// Options are:\n//  - developerAccountsServer: defaults to \"https://www.meteor.com\"\nMeteorDeveloperAccounts._config = function (options) {\n  if (options.developerAccountsServer) {\n    MeteorDeveloperAccounts._server = options.developerAccountsServer;\n  }\n};\n","\nTemplate.__checkName(\"configureLoginServiceDialogForMeteorDeveloper\");\nTemplate[\"configureLoginServiceDialogForMeteorDeveloper\"] = new Template(\"Template.configureLoginServiceDialogForMeteorDeveloper\", (function() {\n  var view = this;\n  return [ HTML.Raw(\"<p>\\n    First, you'll need to get a Meteor developer account Client ID.\\n    Follow these steps:\\n  </p>\\n  \"), HTML.OL(\"\\n    \", HTML.Raw('<li> Visit <a href=\"https://www.meteor.com/account-settings\" target=\"_blank\">https://www.meteor.com/account-settings</a> and sign in.\\n    </li>'), \"\\n    \", HTML.Raw('<li> Click \"New app\" in the \"Meteor developer account apps\" section\\n      and give your app a name.</li>'), \"\\n    \", HTML.LI(\" Add\\n      \", HTML.SPAN({\n    \"class\": \"url\"\n  }, \"\\n        \", Blaze.View(\"lookup:siteUrl\", function() {\n    return Spacebars.mustache(view.lookup(\"siteUrl\"));\n  }), \"_oauth/meteor-developer\\n      \"), \"\\n      as an Allowed Redirect URL.\\n    \"), \"\\n  \") ];\n}));\n","Template.configureLoginServiceDialogForMeteorDeveloper.helpers({\n  siteUrl: function () {\n    return Meteor.absoluteUrl();\n  }\n});\n\nTemplate.configureLoginServiceDialogForMeteorDeveloper.fields = function () {\n  return [\n    {property: 'clientId', label: 'App ID'},\n    {property: 'secret', label: 'App secret'}\n  ];\n};\n","// Request Meteor developer account credentials for the user\n// @param credentialRequestCompleteCallback {Function} Callback function to call on\n//   completion. Takes one argument, credentialToken on success, or Error on\n//   error.\nvar requestCredential = function (options, credentialRequestCompleteCallback) {\n  // support a callback without options\n  if (! credentialRequestCompleteCallback && typeof options === \"function\") {\n    credentialRequestCompleteCallback = options;\n    options = null;\n  }\n\n  var config = ServiceConfiguration.configurations.findOne({\n    service: 'meteor-developer'\n  });\n  if (!config) {\n    credentialRequestCompleteCallback &&\n      credentialRequestCompleteCallback(new ServiceConfiguration.ConfigError());\n    return;\n  }\n\n  var credentialToken = Random.secret();\n\n  var loginStyle = OAuth._loginStyle('meteor-developer', config, options);\n\n  var loginUrl =\n        MeteorDeveloperAccounts._server +\n        \"/oauth2/authorize?\" +\n        \"state=\" + OAuth._stateParam(loginStyle, credentialToken) +\n        \"&response_type=code&\" +\n        \"client_id=\" + config.clientId;\n\n  if (options && options.userEmail)\n    loginUrl += '&user_email=' + encodeURIComponent(options.userEmail);\n\n  loginUrl += \"&redirect_uri=\" + OAuth._redirectUri('meteor-developer', config);\n\n  OAuth.launchLogin({\n    loginService: \"meteor-developer\",\n    loginStyle: loginStyle,\n    loginUrl: loginUrl,\n    credentialRequestCompleteCallback: credentialRequestCompleteCallback,\n    credentialToken: credentialToken,\n    popupOptions: {width: 470, height: 420}\n  });\n};\n\nMeteorDeveloperAccounts.requestCredential = requestCredential;\n"]}