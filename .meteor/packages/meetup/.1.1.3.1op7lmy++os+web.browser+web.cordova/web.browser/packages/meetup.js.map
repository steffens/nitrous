{"version":3,"sources":["meetup/meetup_configure.html","meetup/meetup_configure.js","meetup/meetup_client.js"],"names":[],"mappings":";;;;;;;;;AACA,6D;AACA,8H;AACA,kB;AACA,6oB;AACA,kB;AACA,8C;AACA,sD;AACA,iE;AACA,I;;;;;;;;;;;;;;;;;;;ACTA,uD;AACA,wB;AACA,gC;AACA,G;AACA,G;;AAEA,oE;AACA,U;AACA,yC;AACA,yC;AACA,I;AACA,E;;;;;;;;;;;;;;;;;;;ACXA,Y;AACA,0C;AACA,4B;AACA,mF;AACA,4E;AACA,W;AACA,kF;AACA,qD;AACA,4E;AACA,gD;AACA,iB;AACA,G;;AAEA,gF;AACA,gB;AACA,2E;AACA,8C;AACA,W;AACA,G;;AAEA,wE;AACA,6D;AACA,oE;AACA,0B;AACA,oC;;AAEA,4D;AACA,6D;;AAEA,gE;;AAEA,gB;AACA,sD;AACA,yC;AACA,+B;AACA,+B;AACA,iE;AACA,mE;;AAEA,uD;AACA,mB;AACA,uC;AACA,kB;;AAEA,qB;AACA,2B;AACA,2B;AACA,uB;AACA,yE;AACA,qC;AACA,8C;AACA,K;AACA,E","file":"/packages/meetup.js","sourcesContent":["\nTemplate.__checkName(\"configureLoginServiceDialogForMeetup\");\nTemplate[\"configureLoginServiceDialogForMeetup\"] = new Template(\"Template.configureLoginServiceDialogForMeetup\", (function() {\n  var view = this;\n  return [ HTML.Raw(\"<p>\\n    First, you'll need to get a Meetup Client ID. Follow these steps:\\n  </p>\\n  \"), HTML.OL(\"\\n    \", HTML.Raw('<li>\\n      Visit <a href=\"http://www.meetup.com/meetup_api/oauth_consumers/create/\" target=\"blank\">http://www.meetup.com/meetup_api/oauth_consumers/create/</a>\\n    </li>'), \"\\n    \", HTML.Raw(\"<li>\\n      Set the Consumer name to the name of your application.\\n    </li>\"), \"\\n    \", HTML.Raw(\"<li>\\n      Optionally set the Application Website to the URL of your\\n      website.  You can leave this blank.\\n    </li>\"), \"\\n    \", HTML.LI(\"\\n      Set the \", HTML.Raw(\"<b>Redirect URI</b>\"), \" to: \", HTML.SPAN({\n    \"class\": \"url\"\n  }, Blaze.View(\"lookup:siteUrl\", function() {\n    return Spacebars.mustache(view.lookup(\"siteUrl\"));\n  })), \"  (Do not append a path to this URL.)\\n    \"), \"\\n  \") ];\n}));\n","Template.configureLoginServiceDialogForMeetup.helpers({\n  siteUrl: function () {\n    return Meteor.absoluteUrl();\n  }\n});\n\nTemplate.configureLoginServiceDialogForMeetup.fields = function () {\n  return [\n    {property: 'clientId', label: 'Key'},\n    {property: 'secret', label: 'Secret'}\n  ];\n};\n","Meetup = {};\n// Request Meetup credentials for the user\n// @param options {optional}\n// @param credentialRequestCompleteCallback {Function} Callback function to call on\n//   completion. Takes one argument, credentialToken on success, or Error on\n//   error.\nMeetup.requestCredential = function (options, credentialRequestCompleteCallback) {\n  // support both (options, callback) and (callback).\n  if (!credentialRequestCompleteCallback && typeof options === 'function') {\n    credentialRequestCompleteCallback = options;\n    options = {};\n  }\n\n  var config = ServiceConfiguration.configurations.findOne({service: 'meetup'});\n  if (!config) {\n    credentialRequestCompleteCallback && credentialRequestCompleteCallback(\n      new ServiceConfiguration.ConfigError());\n    return;\n  }\n\n  // For some reason, meetup converts underscores to spaces in the state\n  // parameter when redirecting back to the client, so we use\n  // `Random.id()` here (alphanumerics) instead of `Random.secret()`\n  // (base 64 characters).\n  var credentialToken = Random.id();\n\n  var scope = (options && options.requestPermissions) || [];\n  var flatScope = _.map(scope, encodeURIComponent).join('+');\n\n  var loginStyle = OAuth._loginStyle('meetup', config, options);\n\n  var loginUrl =\n        'https://secure.meetup.com/oauth2/authorize' +\n        '?client_id=' + config.clientId +\n        '&response_type=code' +\n        '&scope=' + flatScope +\n        '&redirect_uri=' + OAuth._redirectUri('meetup', config) +\n        '&state=' + OAuth._stateParam(loginStyle, credentialToken);\n\n  // meetup box gets taller when permissions requested.\n  var height = 620;\n  if (_.without(scope, 'basic').length)\n    height += 130;\n\n  OAuth.launchLogin({\n    loginService: \"meetup\",\n    loginStyle: loginStyle,\n    loginUrl: loginUrl,\n    credentialRequestCompleteCallback: credentialRequestCompleteCallback,\n    credentialToken: credentialToken,\n    popupOptions: {width: 900, height: height}\n  });\n};\n"]}