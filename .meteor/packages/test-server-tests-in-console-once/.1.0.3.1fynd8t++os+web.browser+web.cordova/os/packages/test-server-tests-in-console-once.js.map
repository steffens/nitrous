{"version":3,"sources":["test-server-tests-in-console-once/server.js"],"names":[],"mappings":";;;;;;;;AAAA,e;AACA,e;AACA,iB;AACA,mB;;AAEA,iC;AACA,4D;AACA,E;;AAEA,4B;AACA,2C;AACA,yC;AACA,gC;AACA,kC;AACA,oD;AACA,kC;AACA,yB;AACA,mB;AACA,0B;AACA,mB;AACA,0B;AACA,Q;AACA,K;AACA,6C;AACA,yC;AACA,2B;AACA,gB;AACA,c;AACA,2B;AACA,8C;AACA,8C;AACA,c;AACA,uB;AACA,6D;AACA,iD;AACA,2C;AACA,Y;AACA,oD;AACA,iB;AACA,c;AACA,oB;AACA,yC;AACA,kB;AACA,gB;AACA,uB;AACA,wC;AACA,uC;AACA,mB;AACA,gB;AACA,wB;AACA,qD;AACA,qB;AACA,gB;AACA,oB;AACA,mB;AACA,+D;AACA,4D;AACA,gB;AACA,gB;AACA,qE;AACA,S;AACA,c;AACA,c;AACA,wC;AACA,uC;AACA,c;AACA,O;AACA,O;AACA,kB;AACA,+C;AACA,4E;AACA,qB;AACA,kC;AACA,Y;AACA,sC;AACA,K;AACA,iC;AACA,K;AACA,G","file":"/packages/test-server-tests-in-console-once.js","sourcesContent":["var passed = 0;\nvar failed = 0;\nvar expected = 0;\nvar resultSet = {};\n\nvar getName = function (result) {\n  return result.groupPath.join(\" - \") + \" - \" + result.test;\n};\n\nMeteor.startup(function () {\n  console.log(\"running server-side tests\");\n  Tinytest._runTests(function (results) {\n    var name = getName(results);\n    if (!_.has(resultSet, name)) {\n      var testPath = EJSON.clone(results.groupPath);\n      testPath.push(results.test);\n      resultSet[name] = {\n        name: name,\n        status: \"PENDING\",\n        events: [],\n        testPath: testPath\n      };\n    }\n    _.each(results.events, function (event) {\n      resultSet[name].events.push(event);\n      switch (event.type) {\n      case \"ok\":\n        break;\n      case \"expected_fail\":\n        if (resultSet[name].status !== \"FAIL\")\n          resultSet[name].status = \"EXPECTED\";\n        break;\n      case \"exception\":\n        console.log(name, \":\", \"!!!!!!!!! FAIL !!!!!!!!!!!\");\n        if (event.details && event.details.stack)\n          console.log(event.details.stack);\n        else\n          console.log(\"Test failed with exception\");\n        failed++;\n        break;\n      case \"finish\":\n        switch (resultSet[name].status) {\n        case \"OK\":\n          break;\n        case \"PENDING\":\n          resultSet[name].status = \"OK\";\n          console.log(name, \":\", \"OK\");\n          passed++;\n          break;\n        case \"EXPECTED\":\n          console.log(name, \":\", \"EXPECTED FAILURE\");\n          expected++;\n          break;\n        case \"FAIL\":\n          failed++;\n          console.log(name, \":\", \"!!!!!!!!! FAIL !!!!!!!!!!!\");\n          console.log(JSON.stringify(resultSet[name].info));\n          break;\n        default:\n          console.log(name, \": unknown state for the test to be in\");\n        }\n        break;\n      default:\n        resultSet[name].status = \"FAIL\";\n        resultSet[name].info = results;\n        break;\n      }\n    });\n  }, function () {\n    console.log(\"passed/expected/failed/total\",\n                passed, \"/\", expected, \"/\", failed, \"/\", _.size(resultSet));\n    if (failed > 0) {\n      console.log(\"TESTS FAILED\");\n    } else {\n      console.log(\"ALL TESTS PASSED\");\n    }\n    process.exit(failed ? 1 : 0);\n  });\n});\n"]}